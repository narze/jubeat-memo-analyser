#!/usr/bin/env ruby
# encoding: utf-8
# Converts jubeat memo to jubeat analyser format
# <!--@@@@@-->[\S\s]*<\/p>\n regex to grab just the data I need from the webpage
require "highline/import"
require "HTTParty"
require "mojinizer"

page1 = ask "Enter Cosmos Memo URL: "
page = HTTParty.get("#{page1}")

important = page[/<!--@@@@@-->[\S\s]*<\/p>\n/]

important = important.gsub(/<.*>/,'')
important = important.gsub('不确定度: 0','')
important = important.gsub(/^$\n/, '')
level = important.match(/Level: (\d.*)/).captures[0]
puts "Level: #{level}"
bpm = important.match(/BPM: (\d.*)/).captures[0]
puts "BPM: #{bpm}"
textvalues = important.match(/^(.*)\n(.*)\n(.*)/).captures
songtitle = textvalues[0].romaji.gsub(/\p{Han}/,'')
songartist = textvalues[1].romaji.gsub(/\p{Han}/,'')

case textvalues[2].strip
when "BASIC"
	songdif = '1'
	songdif2 = 'BSC'
when "ADVANCED"
	songdif = '2'
	songdif2 = 'ADV'
when "EXTREME"
	songdif = '3'
	songdif2 = 'EXT'
else
	puts "#{textvalues[2]} error"
end

puts "Song title: #{songtitle}"
puts "Song artist: #{songartist}"
puts "Difficulty: #{songdif}"

fnstr = songtitle.delete(' ')
puts "Name your MP3 and Jacket png #{fnstr}.mp3 and #{fnstr}.png"
puts "You may need to adjust your offset, by default it's -2000"

important = important.gsub(/\A(.*\n){6}/,'')

f2 = File.new("temp.txt", 'w:UTF-8')
f2.write "#{important}"
f2.close


input = "temp.txt"
memoBlank = '口'
memoBackBlank = '－'
analyserSymbols = ['@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']
analyserSymbolPrefix = '‡'
analyserSixSymbols = ['@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']
analyserSixSymbolPrefix = ','
space = " "
groups = Array.new
group = Array.new
out = Array.new

ARGV.each_with_index do |item, i|
  input = item if i == 0
end

abort("ERROR : No input specified") if input.empty?
abort("ERROR : Input not found") if !File.exists?(input)

File.foreach(input, :encoding => "UTF-8") do |line|
  if /^\d+$/.match(line)
    groups.push group
    group = Array.new
  elsif /^.{4}\s+/.match(line)
    group.push line
  end
end

# push last group if group is not empty
groups.push group unless group.empty?

# flush first empty line
groups.shift

# convert into jubeat analyser format
# front : beats' position
# back : beats' rhythm
groups.each_with_index do |a_group, index|
  front = Array.new
  back = Array.new
  a_group.each do |line|
    front.concat line[0..3].split('')
    backside = line[/\|(.+)\|/, 1]
    back.push(backside.split('')) unless backside.nil?
  end

  # replace with jubeat analyser symbols
  back.each_with_index do |line, l|
    isSix = line.length === 6 ? true : false
    line.each_with_index do |item, i|
      if item != memoBackBlank
        if(isSix)
          n = (l * 6) + i
          front.map! do |x|
            x == item ? "#{analyserSixSymbolPrefix}#{analyserSixSymbols[n]}" : x
          end
        else 
          n = (l * 4) + i
          front.map! do |x|
            x == item ? "#{analyserSymbolPrefix}#{analyserSymbols[n]}" : x
          end
        end
      end
    end
  end

  # fill space
  front.map! do |x|
    x == memoBlank ? "#{analyserSymbolPrefix}#{space}" : x
  end

  out.push "---------- #{index+1}"
  while shifted = front.shift(4)
    break if shifted.empty?
    out.push shifted.join
  end
end

#songtitle = ask "Name of song: "
#songartist = ask "Name of artist: "
#bpm = ask "BPM: "
#level = ask "Level: "
#difficulty = ask "Difficulty: "
#fnames = ask "Song and Jacket Name: "

# write result into output
# Set encoding to windows 1252
# (jubeat analyser cannot read utf-8)
output = File.basename(fnstr, ".*") + "_#{songdif2}.txt"
f = File.new(output, 'w:Windows-1252')

# write file attributes
f.write "// Generated by tomatosoup's modifications to jubeat-memo-analyser\n"
f.write "// http://github.com/NarzE/jubeat-memo-analyser\n"
f.write "#title=\"#{songtitle}\"" + "\n"
f.write "#artist=\"#{songartist}\"" + "\n"
f.write "#jacket=\"jacket/#{fnstr}.png\"" + "\n"
f.write "m=\"#{fnstr}.mp3\"" + "\n"
f.write '// Offset' + "\n"
f.write 'o=-2000' + "\n"
f.write '// Beats' + "\n"
f.write 'b=4' + "\n"
f.write '// BPM' + "\n"
f.write "t=#{bpm}" + "\n"
f.write "#lev=#{level}" + "\n"
f.write "#dif=#{songdif}" + "\n"
f.write "\n"

# write 'six' symbols timing
f.write "*#{analyserSixSymbolPrefix}@:0" + "\n"
f.write "*#{analyserSixSymbolPrefix}A:0.166667" + "\n"
f.write "*#{analyserSixSymbolPrefix}B:0.333333" + "\n"
f.write "*#{analyserSixSymbolPrefix}C:0.5" + "\n"
f.write "*#{analyserSixSymbolPrefix}D:0.666667" + "\n"
f.write "*#{analyserSixSymbolPrefix}E:0.833333" + "\n"
f.write "*#{analyserSixSymbolPrefix}F:1" + "\n"
f.write "*#{analyserSixSymbolPrefix}G:1.166667" + "\n"
f.write "*#{analyserSixSymbolPrefix}H:1.333333" + "\n"
f.write "*#{analyserSixSymbolPrefix}I:1.5" + "\n"
f.write "*#{analyserSixSymbolPrefix}J:1.666667" + "\n"
f.write "*#{analyserSixSymbolPrefix}K:1.833333" + "\n"
f.write "*#{analyserSixSymbolPrefix}L:2" + "\n"
f.write "*#{analyserSixSymbolPrefix}M:2.166667" + "\n"
f.write "*#{analyserSixSymbolPrefix}N:2.333333" + "\n"
f.write "*#{analyserSixSymbolPrefix}O:2.5" + "\n"
f.write "*#{analyserSixSymbolPrefix}P:2.666667" + "\n"
f.write "*#{analyserSixSymbolPrefix}Q:2.833333" + "\n"
f.write "*#{analyserSixSymbolPrefix}R:3" + "\n"
f.write "*#{analyserSixSymbolPrefix}S:3.166667" + "\n"
f.write "*#{analyserSixSymbolPrefix}T:3.333333" + "\n"
f.write "*#{analyserSixSymbolPrefix}U:3.5" + "\n"
f.write "*#{analyserSixSymbolPrefix}V:3.666667" + "\n"
f.write "*#{analyserSixSymbolPrefix}W:3.833333" + "\n"
f.write "\n"

# write data
out.each do |line|
  f.write("#{line}\n");
end
f.close
File.delete(f2)
